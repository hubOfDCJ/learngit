#define _CRT_SECURE_NO_WARNINGS 1
#include "contact.h"


void menu()
{
	printf("************************************************\n");
	printf("************  1.添加联系人信息       ***********\n");
	printf("************  2.删除指定联系人信息   ***********\n");
	printf("************  3.查找指定联系人信息   ***********\n");
	printf("************  4.修改指定联系人信息   ***********\n");
	printf("************  5.显示所有联系人信息   ***********\n");
	printf("************  6.清空所有联系人       ***********\n");
	printf("************  7.以名字排序所有联系人 ***********\n");
	printf("************  0.退出                 ***********\n");
	printf("************************************************\n\n");
}

int seek(pcon_t count,char *name)
{
	int j = 0;
	for (j=0; j<count->sz; j++)
	{
		if (strcmp(count->arr[j].name,name) == 0)
			return j;
	}
	return -1;
}

void Add(pcon_t count)  

{  
	printf("请输入联系人的姓名:\n");  
	scanf("%s",count->arr[count->sz].name);
	printf("请输入联系人的性别(男/女):\n");  
	scanf("%s", count->arr[count->sz].sex);  
	printf("请输入联系人的年龄:\n");  
	scanf("%d",&count->arr[count->sz].age);  
	printf("请输入联系人的电话:\n");  
	scanf("%s",count->arr[count->sz].telephone);  
	printf("请输入联系人的住址:\n");  
	scanf("%s",count->arr[count->sz].address);
	printf("已添加\n");
	count->sz++;
}

void Delate(pcon_t count)
{
	int i;
	char name[20];
	printf("请输入要删除的联系人姓名-> ");
	scanf("%s",name);
	if ((i = seek(count,name)) != -1)
	{
		char tmp = 0;
		printf("已找到,是否删除:Y/N\n");
		getchar();
		tmp = getchar();
		if(tmp == 'Y')
		{
			count->arr[i] = count->arr[count->sz-1];
			count->sz--;
		}
	}
	else
		printf("无此联系人\n");
}

void Find(pcon_t count)
{
	int i;
	char name[20];
	printf("请输入你要查找的联系人\n");
	scanf("%s",name);
	if ((i = seek(count,name)) != -1)
	{
		printf("姓名：%s\n",count->arr[i].name);
		printf("性别：%s\n",count->arr[i].sex);
		printf("年龄：%d\n",count->arr[i].age);
		printf("电话：%s\n",count->arr[i].telephone);
		printf("地址：%s\n",count->arr[i].address);
	}
	else
		printf("无此联系人\n");
}

void Alter(pcon_t count)
{
	int i;
	char name[20];
	printf("请输入你要修改联系人的姓名->");
	scanf("%s",name);
	if ((i = seek(count,name)) != -1)
	{
		printf("姓名：%s\n",count->arr[i].name);
		printf("性别：%s\n",count->arr[i].sex);
		printf("年龄：%d\n",count->arr[i].age);
		printf("电话：%s\n",count->arr[i].telephone);
		printf("地址：%s\n",count->arr[i].address);
		printf("修改为：\n");
		printf("姓名：");
		scanf("%s",count->arr[i].name);
		printf("性别：");
		scanf("%s",count->arr[i].sex);
		printf("年龄：");
		scanf("%d",&count->arr[i].age);
		printf("电话：");
		scanf("%s",count->arr[i].telephone);
		printf("地址：");
		scanf("%s",count->arr[i].address);
	}
}

void Show(pcon_t count)
{
	int i = 0;
	if (count->sz == 0)
	{
		printf("无联系人\n\n");
		return;
	}
	printf("%s\t%s\t%s\t%-11s\t%s\n","姓名","性别","年龄","电话","住址");
	for (i=0; i<count->sz; i++)
	{
		printf("%s\t%s\t%d\t%-11s\t%s\n",count->arr[i].name,count->arr[i].sex,
			count->arr[i].age,count->arr[i].telephone,count->arr[i].address);
	}
}

void Empty(pcon_t count)
{
	count->sz = 0;
	printf("已置空\n");
}

void Sort(pcon_t count)
{
	char tmp[20] = {0};
	int i = 0;
	int j = 0;
	for (i=0; i<count->sz-1; i++)
	{
		for (j=i+1; j<count->sz; j++)
		{
			if (strcmp(count->arr[i].name,count->arr[j].name) > 0)
			{
				strcpy(tmp,count->arr[i].name);
				strcpy(count->arr[i].name,count->arr[j].name);
				strcpy(count->arr[j].name,tmp);
			}
		}
	}
	if (count->sz == 0)
	{
		printf("无联系人\n");
	}
	else
		printf("已排序\n");
}